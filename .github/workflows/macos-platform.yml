# This starter workflow is for a CMake project running on a single platform. There is a different starter workflow if you need cross-platform coverage.
# See: https://github.com/actions/starter-workflows/blob/main/ci/cmake-multi-platform.yml
name: MacOS

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v4
      with:
        submodules:true

    - name: Update submodule
      run: |
        git submodule update --init --recursive
        git submodule update --remote --recursive

    - name: Extract version from CMakeLists.txt
      id: version
      run: |
        VERSION=$(sed -nE 's/^project\([^)]*VERSION[[:space:]]+([0-9]+\.[0-9]+\.[0-9]+).*/\1/p' CMakeLists.txt)
        echo "version=$VERSION" >> $GITHUB_OUTPUT

    - name: Install SWIG
      run: brew install swig

    - name: Install ImageMagick
      run: brew install imagemagick

    - name: Install nlohmann-json
      run: brew install nlohmann-json

    - name: Install postgresql
      run: brew install postgresql

    - name: Install Boost
      run: brew install boost

    - name: Configure CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=install

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}}

    - name: Install
      run: cmake --install build

    - name: Upload install artifact
      uses: actions/upload-artifact@v4
      with:
        name: Mosaify-${{ steps.version.outputs.version }}
        path: ${{github.workspace}}/build/install/

